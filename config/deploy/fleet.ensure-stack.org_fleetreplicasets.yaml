
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: fleetreplicasets.fleet.ensure-stack.org
spec:
  group: fleet.ensure-stack.org
  names:
    kind: FleetReplicaSet
    listKind: FleetReplicaSetList
    plural: fleetreplicasets
    singular: fleetreplicaset
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.replicas
      name: Replicas
      type: integer
    - jsonPath: .status.availableReplicas
      name: Available
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FleetReplicaSet is the Schema for the FleetReplicaSets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FleetReplicaSetSpec defines the desired state of FleetReplicaSet.
            properties:
              remoteClusterSelector:
                description: RemoteCluster selector targets the clusters this object should be rolled out to.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
              template:
                description: Template of the RemoteObject to create.
                properties:
                  metadata:
                    type: object
                  spec:
                    description: RemoteObjectSpec defines the desired state of RemoteObject.
                    properties:
                      availabilityProbe:
                        description: Configures how availability of the RemoteObject is determined.
                        properties:
                          condition:
                            description: Condition specific configuration parameters. Only present if Type = Condition.
                            properties:
                              type:
                                description: Condition Type to check.
                                type: string
                            required:
                            - type
                            type: object
                          type:
                            description: Type of the probe.
                            enum:
                            - Condition
                            type: string
                        required:
                        - condition
                        - type
                        type: object
                      object:
                        type: object
                        x-kubernetes-embedded-resource: true
                        x-kubernetes-preserve-unknown-fields: true
                      priorityClassName:
                        description: Priority Class name. RemoteObjectPriorityClasses need to be defined beforehand.
                        type: string
                    required:
                    - availabilityProbe
                    - object
                    type: object
                required:
                - metadata
                - spec
                type: object
            required:
            - remoteClusterSelector
            - template
            type: object
          status:
            properties:
              availableReplicas:
                description: The number of available replicas across the fleet.
                format: int32
                type: integer
              observedGeneration:
                description: The most recent generation observed by the controller.
                format: int64
                type: integer
              replicas:
                description: The number of replicas managed across the fleet.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
